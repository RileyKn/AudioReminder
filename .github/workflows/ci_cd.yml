name: Node.js App CI

on:
  pull_request:
    branches: 
      - main
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [23.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with: 
          version: 10

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      

      - name: Install dependencies
        run: pnpm install

      - name: Lint code
        run: pnpm lint
  deploy:
    name: Deploy & Push to DockerHub
    runs-on: ubuntu-latest
    needs: build

    environment: docker

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/audioreminder:latest .

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/audioreminder:latest 

  publish:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://npm.pkg.github.com/

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with: 
          version: 10

      - name: Install dependencies
        run: pnpm install

      - name: Bump patch version
        run: |
          CURRENT=$(node -p "require('./package.json').version")
          NEW=$(npx semver $CURRENT -i patch)
          echo "Bumping $CURRENT â†’ $NEW"
          jq ".version=\"$NEW\"" package.json > temp.json && mv temp.json package.json

      - name: Publish to GitHub Packages
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
    